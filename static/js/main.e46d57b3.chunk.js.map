{"version":3,"sources":["image/wallet.png","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","actions/index.js","pages/Login.js","components/header.js","components/form.js","components/footer.js","components/tableelement.js","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","email","password","name","user","state","action","type","payload","isFetching","currencies","expenses","wallet","filter","expense","id","rootReducer","combineReducers","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","addExpense","emailState","senha","nome","error","buttonDisabled","Login","onChange","bind","e","this","target","value","setState","emailValidation","passwordValidation","history","props","loginInfo","dispatchLogin","push","test","length","className","src","Carteira","alt","data-testid","onClick","onSubmit","disabled","React","Component","connect","dispatch","actions","Header","convertValue","currency","valueExchange","exchangeRates","ask","Number","expenseTotal","reduce","acc","toFixed","method","tag","description","Form","dispatchCurrencies","dispatchExpense","htmlFor","map","cur","key","a","fetch","response","json","rawCur","filterCur","Object","keys","expenseLength","myExpense","Footer","role","aria-label","TableElement","findExchange","findCurrencyName","deleteExpense","Wallet","index","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","Store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e46d57b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.2fdf2d8e.png\";","// Esse reducer será responsável por tratar as informações da pessoa usuária\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  name: '',\r\n};\r\n\r\nfunction user(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case 'LOGIN_USER':\r\n    return {\r\n      ...state,\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n      name: action.payload.name,\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default user;\r\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\r\nconst INITIAL_STATE = {\r\n  isFetching: true,\r\n  currencies: [],\r\n  expenses: [],\r\n};\r\n\r\nfunction wallet(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n  case 'REQUEST_CURRENCIES':\r\n    return { ...state, isFetching: true };\r\n  case 'GET_CURRENCIES':\r\n    return { ...state, isFetching: false, currencies: action.payload };\r\n  case 'ADD_EXPENSE':\r\n    return { ...state, expenses: [...state.expenses, action.payload] };\r\n  case 'DELETE_EXPENSE':\r\n    return {\r\n      ...state,\r\n      expenses: state.expenses.filter((expense) => expense.id !== action.payload),\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default wallet;\r\n","import { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport wallet from './wallet';\r\n\r\nconst rootReducer = combineReducers({ user, wallet });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n\r\nexport default store;\r\n","// Coloque aqui suas actions\r\nexport const loginUser = (loginInfo) => ({\r\n  type: 'LOGIN_USER',\r\n  payload: {\r\n    email: loginInfo.email,\r\n    password: loginInfo.senha,\r\n    name: loginInfo.nome,\r\n  },\r\n});\r\n\r\nexport const requestCurrencies = () => ({\r\n  type: 'REQUEST_CURRENCIES',\r\n});\r\n\r\nexport const getCurrencies = (currencies) => ({\r\n  type: 'GET_CURRENCIES',\r\n  payload: currencies,\r\n});\r\n\r\nexport const fetchCurrencies = () => async (dispatch) => {\r\n  dispatch(requestCurrencies());\r\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\r\n  const rawCur = await response.json();\r\n  const filterCur = Object.keys(rawCur).filter((key) => key !== 'USDT');\r\n  dispatch(getCurrencies(filterCur));\r\n};\r\n\r\nexport const addExpense = (expense) => ({\r\n  type: 'ADD_EXPENSE',\r\n  payload: expense,\r\n});\r\n\r\nexport const sendExpense = (expense, wallet) => async (dispatch) => {\r\n  const response = await fetch('https://economia.awesomeapi.com.br/json/all');\r\n  const rawCur = await response.json();\r\n\r\n  const expenseLength = wallet.expenses.length;\r\n  const myExpense = { id: expenseLength, ...expense, exchangeRates: rawCur };\r\n\r\n  dispatch(addExpense(myExpense));\r\n};\r\n\r\nexport const deleteExpense = (expense) => ({\r\n  type: 'DELETE_EXPENSE',\r\n  payload: expense.id,\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Carteira from '../image/wallet.png';\r\nimport './Login.css';\r\nimport '../index.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport * as actions from '../actions';\r\n\r\nconst emailState = {\r\n  email: '',\r\n  senha: '',\r\n  nome: '',\r\n  error: {\r\n    email: '',\r\n    password: '',\r\n  },\r\n  buttonDisabled: true,\r\n};\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = emailState;\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    const { buttonDisabled } = this.state;\r\n    const { id, value } = e.target;\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n\r\n    this.setState({ buttonDisabled: true }, () => {\r\n      if (this.emailValidation() && this.passwordValidation()) {\r\n        this.setState({\r\n          buttonDisabled: false,\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!buttonDisabled) {\r\n      this.setState({\r\n        error: { email: '', password: '' },\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    const { email, senha, nome } = this.state;\r\n    const { history } = this.props;\r\n    const loginInfo = { email, senha, nome };\r\n\r\n    const { dispatchLogin } = this.props;\r\n\r\n    if (this.emailValidation() && this.passwordValidation()) {\r\n      dispatchLogin(loginInfo);\r\n      history.push('/carteira');\r\n    }\r\n  }\r\n\r\n  emailValidation() {\r\n    const { email, error } = this.state;\r\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n    if (!email || regex.test(email) === false) {\r\n      return false;\r\n    }\r\n\r\n    this.setState({\r\n      error: { ...error, email: '' },\r\n    });\r\n    return true;\r\n  }\r\n\r\n  passwordValidation() {\r\n    const { senha, error } = this.state;\r\n    const passMinLength = 6;\r\n    if (!senha || senha.length < passMinLength) {\r\n      this.setState({\r\n        error: { ...error, password: 'Mínimo de 6 caracteres' },\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.setState({\r\n      error: { ...error, password: '' },\r\n    });\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { email, senha, nome, error, buttonDisabled } = this.state;\r\n\r\n    return (\r\n      <div className=\"form form-group\">\r\n        <img src={ Carteira } alt=\"trybewallet\" className=\"logo\" />\r\n        <h4>Bem vindo a TrybeWallet.</h4>\r\n        <h6>Faça o cadastro e entre</h6>\r\n        <div className=\"form-group mb-3\">\r\n          <div className=\"inputForm\">\r\n            <strong>Nome</strong>\r\n            <input\r\n              id=\"nome\"\r\n              type=\"text\"\r\n              name=\"nome\"\r\n              value={ nome }\r\n              onChange={ this.onChange }\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"inputForm\">\r\n            <strong>Email</strong>\r\n            <input\r\n              data-testid=\"email-input\"\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={ email }\r\n              onChange={ this.onChange }\r\n              className=\"form-control\"\r\n            />\r\n            <span className=\"text-danger\">{error.email}</span>\r\n          </div>\r\n\r\n          <div className=\"inputForm\">\r\n            <strong>Senha</strong>\r\n            <input\r\n              data-testid=\"password-input\"\r\n              id=\"senha\"\r\n              type=\"password\"\r\n              name=\"senha\"\r\n              value={ senha }\r\n              onChange={ this.onChange }\r\n              className=\"form-control\"\r\n            />\r\n            <span className=\"text-danger\">{error.password}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-grid\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-dark\"\r\n            onClick={ () => this.onSubmit() }\r\n            disabled={ buttonDisabled }\r\n          >\r\n            Entrar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatchLogin: (loginInfo) => dispatch(actions.loginUser(loginInfo)),\r\n});\r\n\r\nLogin.propTypes = {\r\n  dispatchLogin: PropTypes.func,\r\n}.isRequired;\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './header.css';\r\nimport '../index.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass Header extends React.Component {\r\n  // convertValue veio do repositório de Willian Bomfim (https://github.com/tryber/sd-020-b-project-trybewallet/pull/124/files)\r\n  convertValue = (expense) => {\r\n    const { value, currency, exchangeRates } = expense;\r\n    const valueExchange = exchangeRates[currency].ask;\r\n    return Number(value * valueExchange);\r\n  }\r\n\r\n  expenseTotal = () => {\r\n    const { wallet: { expenses } } = this.props;\r\n    const total = expenses.reduce((acc, expense) => acc + this.convertValue(expense), 0);\r\n    return total.toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <header>\r\n        <h1>Carteira</h1>\r\n        <div className=\"container-direita\">\r\n          <div className=\"usuario\">\r\n            <p data-testid=\"email-field\">{user.email}</p>\r\n            <p data-testid=\"name-field\">{user.name}</p>\r\n          </div>\r\n          <div className=\"despesas\">\r\n            <span>Despesa Total: R$</span>\r\n            <span\r\n              data-testid=\"total-field\"\r\n            >\r\n              {`${this.expenseTotal()}`}\r\n            </span>\r\n            <span data-testid=\"header-currency-field\">BRL</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  wallet: state.wallet,\r\n});\r\n\r\nHeader.propTypes = {\r\n  user: PropTypes.shape({ email: PropTypes.string, name: PropTypes.string }),\r\n  wallet: PropTypes.shape({ despesa: PropTypes.number }),\r\n}.isRequired;\r\n\r\nexport default connect(mapStateToProps, null)(Header);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as actions from '../actions';\r\nimport '../index.css';\r\nimport './form.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst INITIAL_STATE = {\r\n  value: 0,\r\n  currency: 'USD',\r\n  method: 'Dinheiro',\r\n  tag: 'Alimentação',\r\n  description: '',\r\n};\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatchCurrencies } = this.props;\r\n    dispatchCurrencies();\r\n  }\r\n\r\n  onChange(e) {\r\n    const { id, value } = e.target;\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    const { dispatchExpense, wallet } = this.props;\r\n    const { value, currency, method, tag, description } = this.state;\r\n    dispatchExpense({ value, currency, method, tag, description }, wallet);\r\n    this.setState(INITIAL_STATE);\r\n  }\r\n\r\n  render() {\r\n    const { wallet } = this.props;\r\n    const { currencies } = wallet;\r\n    const { value, currency, method, tag, description } = this.state;\r\n\r\n    return (\r\n      <div className=\"form-add form-group\">\r\n        <label htmlFor=\"value\">\r\n          Valor\r\n          <input\r\n            className=\"form-control\"\r\n            data-testid=\"value-input\"\r\n            type=\"number\"\r\n            id=\"value\"\r\n            value={ value }\r\n            onChange={ this.onChange }\r\n          />\r\n        </label>\r\n        <label htmlFor=\"currency\">\r\n          moeda\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"currency\"\r\n            name=\"currency\"\r\n            value={ currency }\r\n            onChange={ this.onChange }\r\n          >\r\n            {currencies.map((cur) => (\r\n              <option key={ cur } value={ cur }>{cur}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"method\">\r\n          Metodo\r\n          <select\r\n            className=\"form-control\"\r\n            data-testid=\"method-input\"\r\n            id=\"method\"\r\n            name=\"method\"\r\n            value={ method }\r\n            onChange={ this.onChange }\r\n          >\r\n            <option value=\"Dinheiro\">Dinheiro</option>\r\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\r\n            <option value=\"Cartão de débito\">Cartão de débito</option>\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"tag\">\r\n          Categoria\r\n          <select\r\n            className=\"form-control\"\r\n            data-testid=\"tag-input\"\r\n            id=\"tag\"\r\n            name=\"tag\"\r\n            value={ tag }\r\n            onChange={ this.onChange }\r\n          >\r\n            <option value=\"Alimentação\">Alimentação</option>\r\n            <option value=\"Lazer\">Lazer</option>\r\n            <option value=\"Trabalho\">Trabalho</option>\r\n            <option value=\"Transporte\">Transporte</option>\r\n            <option value=\"Saúde\">Saúde</option>\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"description\">\r\n          Descrição\r\n          <input\r\n            className=\"form-control\"\r\n            data-testid=\"description-input\"\r\n            type=\"text\"\r\n            id=\"description\"\r\n            value={ description }\r\n            onChange={ this.onChange }\r\n          />\r\n        </label>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          type=\"button\"\r\n          onClick={ this.onSubmit }\r\n        >\r\n          Adicionar Despesa\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  dispatchCurrencies: PropTypes.func.isRequired,\r\n  wallet: PropTypes.shape({ currencies: PropTypes.arrayOf(PropTypes.string) }).isRequired,\r\n  dispatchExpense: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  wallet: state.wallet,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  dispatchCurrencies: () => dispatch(actions.fetchCurrencies()),\r\n  dispatchExpense: (expense, wallet) => (dispatch(actions.sendExpense(expense, wallet))),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport '../index.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './footer.css';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <p>\r\n          Feito com\r\n          {' '}\r\n          <span role=\"img\" aria-label=\"Heart\">❤️</span>\r\n          {' '}\r\n          por Pedro Mello.\r\n        </p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TableElement extends React.Component {\r\n  // convertValue veio do repositório de Willian Bomfim (https://github.com/tryber/sd-020-b-project-trybewallet/pull/124/files)\r\n  convertValue = (expense) => {\r\n    const { value, currency, exchangeRates } = expense;\r\n    const valueExchange = exchangeRates[currency].ask;\r\n    return Number(value * valueExchange).toFixed(2);\r\n  }\r\n\r\n  findExchange = (expense) => {\r\n    const { currency, exchangeRates } = expense;\r\n    return Number(exchangeRates[currency].ask).toFixed(2);\r\n  }\r\n\r\n  findCurrencyName = (expense) => {\r\n    const { currency, exchangeRates } = expense;\r\n    return exchangeRates[currency].name;\r\n  }\r\n\r\n  render() {\r\n    const { expense, deleteExpense } = this.props;\r\n    const {\r\n      description,\r\n      tag,\r\n      method,\r\n      value,\r\n    } = expense;\r\n\r\n    return (\r\n      <tr className=\"\">\r\n        <td>{description}</td>\r\n        <td>{tag}</td>\r\n        <td>{method}</td>\r\n        <td>{Number(value).toFixed(2)}</td>\r\n        <td>{this.findCurrencyName(expense)}</td>\r\n        <td>{this.findExchange(expense)}</td>\r\n        <td>{this.convertValue(expense)}</td>\r\n        <td>Real</td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            data-testid=\"delete-btn\"\r\n            type=\"button\"\r\n            onClick={ () => deleteExpense(expense) }\r\n          >\r\n            Deletar\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nTableElement.propTypes = {\r\n  expense: PropTypes.shape({\r\n    description: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    method: PropTypes.string,\r\n    value: PropTypes.number,\r\n    currency: PropTypes.string,\r\n    exchange: PropTypes.number,\r\n    exchangeCurrency: PropTypes.string,\r\n  }),\r\n}.isRequired;\r\n\r\nexport default connect(null, null)(TableElement);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../components/header';\r\nimport Form from '../components/form';\r\nimport Footer from '../components/footer';\r\nimport TableElement from '../components/tableelement';\r\nimport '../index.css';\r\nimport './Wallet.css';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport * as actions from '../actions';\r\n\r\nclass Wallet extends React.Component {\r\n  deleteExpense = (expense) => {\r\n    const { deleteExpense } = this.props;\r\n    deleteExpense(expense);\r\n  }\r\n\r\n  render() {\r\n    const { expenses } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <Form />\r\n        <table className=\"table table-hover\">\r\n          <thead className=\"\">\r\n            <tr>\r\n              <th>Descrição</th>\r\n              <th>Tag</th>\r\n              <th>Método de pagamento</th>\r\n              <th>Valor</th>\r\n              <th>Moeda</th>\r\n              <th>Câmbio utilizado</th>\r\n              <th>Valor convertido</th>\r\n              <th>Moeda de conversão</th>\r\n              <th>Editar/Excluir</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {expenses.map((expense, index) => (<TableElement\r\n              key={ index }\r\n              expense={ expense }\r\n              deleteExpense={ this.deleteExpense }\r\n            />))}\r\n          </tbody>\r\n        </table>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nWallet.propTypes = {\r\n  user: PropTypes.shape({ name: PropTypes.string }).isRequired,\r\n  wallet: PropTypes.shape({\r\n    expenses: PropTypes.arrayOf(PropTypes.shape({ description: PropTypes.string })),\r\n  }).isRequired,\r\n  expenses: PropTypes.arrayOf(PropTypes.shape({\r\n    description: PropTypes.string,\r\n  })).isRequired,\r\n  deleteExpense: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  wallet: state.wallet,\r\n  expenses: state.wallet.expenses,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteExpense: (expense) => dispatch(actions.deleteExpense(expense)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport Carteira from './pages/Wallet';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={ Login } />\r\n      <Route path=\"/carteira\" component={ Carteira } />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <HashRouter basename=\"/\">\r\n      <Provider store={ Store }>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}